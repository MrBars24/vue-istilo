// ============================================================
// Name:            Off-canvas
// Description:     Component to create an off-canvas sidebar
//
// Component:       `#{$prefix}-offcanvas`
//
// Sub-components:  `#{$prefix}-offcanvas-bar`
//                  `#{$prefix}-offcanvas-container`
//                  `#{$prefix}-offcanvas-page`
//
// Adopted:         `#{$prefix}-close`
//
// Modifiers:       `#{$prefix}-offcanvas-flip`
//                  `#{$prefix}-offcanvas-bar-animation`
//                  `#{$prefix}-offcanvas-reveal`
//                  `#{$prefix}-offcanvas-overlay`
//                  `#{$prefix}-offcanvas-container-animation`
//
// States:          `#{$prefix}-open`
// ============================================================

// Variables
// ============================================================

$offcanvas-z-index:                     layer(offcanvas) !default;

$offcanvas-bar-width:                   270px !default;
$offcanvas-bar-padding-vertical:        margin(global) !default;
$offcanvas-bar-padding-horizontal:      margin(global) !default;
$offcanvas-bar-background:              color(inverse) !default;

$offcanvas-bar-width-m:                 350px !default;
$offcanvas-bar-padding-vertical-m:      gutter(medium) !default;
$offcanvas-bar-padding-horizontal-m:    gutter(medium) !default;

$offcanvas-bar-width-l:                 400px !default;
$offcanvas-bar-padding-vertical-l:      gutter(medium) !default;
$offcanvas-bar-padding-horizontal-l:    gutter(medium) !default;

$offcanvas-close-position:              20px !default;
$offcanvas-close-padding:               5px !default;

$offcanvas-overlay-background:          rgba(0, 0, 0, 0.1) !default;



/* ============================================================
    Component: Off-canvas
   ============================================================ */

/*
 * 1. HIde by default
 * 2. Set position
 * 3. Use height intead of `bottom: 0` because of wrong height calculation on
 *    Android (+ Chrome Responsive Mode)
 */

.#{$prefix}-offcanvas {
    /* 1 */
    display: none;

    /* 2 */
    position: fixed;
    top: 0;
    left: 0;
    z-index: $offcanvas-z-index;

    /* 3 */
    height: 100%;
}

/*
 * Flip modifier
 */

.#{$prefix}-offcanvas.#{$prefix}-offcanvas-flip {
    right: 0;
    left: auto;
}



/* Bar
   ============================================================ */

/*
 * 1. Set position
 * 2. Size and style
 * 3. Allow scrolling
 * 4. Transform
 */

.#{$prefix}-offcanvas-bar {
    /* 1 */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;

    /* 2 */
    box-sizing: border-box;
    width: $offcanvas-bar-width;
    padding: $offcanvas-bar-padding-vertical $offcanvas-bar-padding-horizontal;
    background: $offcanvas-bar-background;

    /* 3 */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;

    /* 4 */
    transform: translateX(-100%);
}

@include respond-to(medium) {
    .#{$prefix}-offcanvas-bar {
        width: $offcanvas-bar-width-m;
        padding: $offcanvas-bar-padding-vertical-m $offcanvas-bar-padding-horizontal-m;
    }
}

@include respond-to(large) {
    .#{$prefix}-offcanvas-bar {
        width: $offcanvas-bar-width-l;
        padding: $offcanvas-bar-padding-vertical-l $offcanvas-bar-padding-horizontal-l;
    }
}



/* Flip modifier */
.#{$prefix}-offcanvas-flip .#{$prefix}-offcanvas-bar {
    left: auto;
    right: 0;
    transform: translateX(100%);
}



/*
 * Open
 */

.#{$prefix}-open > .#{$prefix}-offcanvas-bar {
    transform: translateX(0);
}



/*
 * Slide animation (Used in slide and push mode)
 */

.#{$prefix}-offcanvas-bar-animation {
    transition: transform 0.3s ease-out;
}




/* Close
 * Adopts `#{$prefix}-close`
   ============================================================ */

.#{$prefix}-offcanvas-close {
    position: absolute;
    top: $offcanvas-close-position;
    right: $offcanvas-close-position;
    padding: $offcanvas-close-padding;
}



/* Overlay
   ============================================================ */

/*
 * Overlay the whole page, Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events
 */

.#{$prefix}-offcanvas-overlay {
    /* 1 */
    width: 100vw;

    /* 2 */
    touch-action: none;
}

/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */

.#{$prefix}-offcanvas-overlay:before {
    /* 1 */
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: $offcanvas-overlay-background;

    /* 2 */
    opacity: 0;
    transition: opacity 0.3s linear;
}

.#{$prefix}-offcanvas-overlay.#{$prefix}-open:before {
    opacity: 1;
}



/* Prevent scrolling
   ============================================================ */

/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead `transform` beacuse position `fixed`
 * elements like sticky navbars lose thier fixed state and behaves
 * like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */

.#{$prefix}-offcanvas-container {
    position: relative;
    left: 0;
    transition: left 0.3s ease-out;

    /* 1 */
    box-sizing: border-box;
    width: 100%;
}

/*
 * Activate slide-out animation
 */

:not(.uis-offcanvas-flip).#{$prefix}-offcanvas-container-animation {
    left: $offcanvas-bar-width;
}

.#{$prefix}-offcanvas-flip.#{$prefix}-offcanvas-container-animation {
    left: (-$offcanvas-bar-width);
}

/* Tabled landscape and bigger */
@include respond-to(medium) {
    :not(.uis-offcanvas-flip).#{$prefix}-offcanvas-container-animation {
        left: $offcanvas-bar-width-m;
    }

    .#{$prefix}-offcanvas-flip.#{$prefix}-offcanvas-container-animation {
        left: (-$offcanvas-bar-width-m);
    }
}
